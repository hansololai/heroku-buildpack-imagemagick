#!/bin/bash

indent() {
  sed -u 's/^/       /'
}
install() {
  curl -s "$1" >pkg.deb
  dpkg -x pkg.deb "$2"
  rm pkg.deb
}
echo "-----> Checking dependency for heroku stack "
# Define required Debian packages for each Heroku stack. Cedar-14 already
# contains all the dependencies for Graphviz, so only the Graphviz package
# needs to be installed. Heroku-16 misses some dependencies in the form of
# shared libraries, and they must be additonally installed.
case "$STACK" in
  heroku-16)
    graphviz_version="2.38.0"
    packages=(graphviz_2.38.0-12ubuntu2_amd64.deb
              libgvc6_2.38.0-12ubuntu2_amd64.deb
              libcgraph6_2.38.0-12ubuntu2_amd64.deb
              libcdt5_2.38.0-12ubuntu2_amd64.deb
              libpathplan4_2.38.0-12ubuntu2_amd64.deb) ;;
  cedar-14)
    graphviz_version="2.36.0"
    packages=graphviz_2.36.0-0ubuntu3.1_amd64.deb ;;
  *)
    echo "Buildpack error: unsupported stack $STACK" | a
    exit 1 ;;
esac


echo "-----> Install ImageMagick"

BUILD_DIR=$1
CACHE_DIR=$2
VENDOR_DIR="$BUILD_DIR/vendor"
mkdir -p $VENDOR_DIR
INSTALL_DIR="$VENDOR_DIR/imagemagick"
mkdir -p $INSTALL_DIR
IMAGE_MAGICK_VERSION="${IMAGE_MAGICK_VERSION:-6.9.5-10}"
CACHE_FILE="$CACHE_DIR/imagemagick-$IMAGE_MAGICK_VERSION.tar.gz"

# This URL can be found out with: apt-cache show graphviz | grep Filename
base_url="http://archive.ubuntu.com/ubuntu/pool/main/g/graphviz"
echo "Installing the following packages:" | a
for p in "${packages[@]}"; do
  echo "    * $p" | i
  install "$base_url/$p" "$1/$INSTALL_DIR"
done

if [ ! -f $CACHE_FILE ]; then
  # install imagemagick
  IMAGE_MAGICK_FILE="ImageMagick-$IMAGE_MAGICK_VERSION.tar.xz"
  IMAGE_MAGICK_DIR="ImageMagick-$IMAGE_MAGICK_VERSION"
  # SSL cert used on imagemagick not recognized by heroku.
  IMAGE_MAGICK_URL="http://www.imagemagick.org/download/releases/$IMAGE_MAGICK_FILE"

  echo "-----> Downloading ImageMagick from $IMAGE_MAGICK_URL"
  wget $IMAGE_MAGICK_URL -P $BUILD_DIR | indent

  echo "-----> Extracting ImageMagick from $BUILD_DIR/$IMAGE_MAGICK_FILE"
  if [ ! -f $BUILD_DIR/$IMAGE_MAGICK_FILE ]; then
    echo "Error: Unable to download ImageMagick" | indent
    ls $BUILD_DIR | indent
    exit 1;
  fi
  tar xvf $BUILD_DIR/$IMAGE_MAGICK_FILE | indent

  echo "-----> Building ImageMagick"
  cd $IMAGE_MAGICK_DIR
  export CPPFLAGS="-I$INSTALL_DIR/include"
  export LDFLAGS="-L$INSTALL_DIR/lib"
  ./configure --prefix=$INSTALL_DIR --without-gvc
  make && make install
  cd ..
  rm -rf $IMAGE_MAGICK_DIR

  # cache for future deploys
  echo "-----> Caching ImageMagick installation"
  cd $VENDOR_DIR
  REL_INSTALL_DIR="imagemagick"
  tar czf $REL_INSTALL_DIR.tar.gz $REL_INSTALL_DIR
  mv $REL_INSTALL_DIR.tar.gz $CACHE_FILE

else
  # cache exists, extract it
  echo "-----> Extracting ImageMagick $CACHE_FILE => $VENDOR_DIR"
  tar xzf $CACHE_FILE -C $VENDOR_DIR
fi

echo "-----> Writing policy file"
mkdir -p $INSTALL_DIR/etc/ImageMagick
cat > $INSTALL_DIR/policy.xml <<EOF
<policymap>
  <policy domain="coder" rights="none" pattern="EPHEMERAL" />
  <policy domain="coder" rights="none" pattern="HTTPS" />
  <policy domain="coder" rights="none" pattern="MVG" />
  <policy domain="coder" rights="none" pattern="MSL" />
</policymap>
EOF

# update PATH and LD_LIBRARY_PATH
echo "-----> Updating environment variables"
PROFILE_PATH="$BUILD_DIR/.profile.d/imagemagick.sh"
ACTUAL_INSTALL_PATH="$HOME/vendor/imagemagick"
mkdir -p $(dirname $PROFILE_PATH)
echo "export PATH=$ACTUAL_INSTALL_PATH/bin:\$PATH" >> $PROFILE_PATH
echo "export LD_LIBRARY_PATH=$ACTUAL_INSTALL_PATH/lib:\$LD_LIBRARY_PATH" >> $PROFILE_PATH
echo "export MAGICK_CONFIGURE_PATH=$ACTUAL_INSTALL_PATH" >> $PROFILE_PATH

# DOWNLOAD_URL="http://www.imagemagick.org/download/ImageMagick-6.9.2-0.tar.gz"

# echo "DOWNLOAD_URL = " $DOWNLOAD_URL | indent

# cd $BUILD_DIR
# mkdir -p $VENDOR_DIR
# cd $VENDOR_DIR
# curl -L --silent $DOWNLOAD_URL | tar xz

# echo "exporting PATH and LIBRARY_PATH" | indent
# PROFILE_PATH="$BUILD_DIR/.profile.d/imagemagick.sh"
# mkdir -p $(dirname $PROFILE_PATH)
# echo 'export PATH="$PATH:$HOME/vendor/ImageMagick-6.9.2/bin"' >> $PROFILE_PATH
# echo 'export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$HOME/vendor/ImageMagick-6.9.2/lib"' >> $PROFILE_PATH
